<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  - $Id: applicationContext-security.xml 4074 2009-12-18 18:44:17Z ltaylor $
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <beans:bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="location"><beans:value>classpath:app.properties</beans:value></beans:property>
    </beans:bean>

    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <beans:property name="driverClassName"><beans:value>${app.db.driver_class}</beans:value></beans:property>
      <beans:property name="url"><beans:value>${app.db.url}</beans:value></beans:property>
      <beans:property name="username"><beans:value>${app.db.user}</beans:value></beans:property>
      <beans:property name="password"><beans:value>${app.db.pass}</beans:value></beans:property>
    </beans:bean>

    <beans:bean id="SessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
      <beans:property name="dataSource"><beans:ref local="dataSource"/></beans:property>
      <beans:property name="configurationClass"><beans:value>org.hibernate.cfg.AnnotationConfiguration</beans:value></beans:property>
      <beans:property name="packagesToScan">
        <beans:list>
          <beans:value>com.k_int.svc.identity.datamodel</beans:value>
        </beans:list>
      </beans:property>
      <beans:property name="hibernateProperties">
        <beans:props>
          <beans:prop key="hibernate.dialect">${app.db.hiberate_dialect}</beans:prop>
          <beans:prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</beans:prop>
          <beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
          <beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop>
        </beans:props>
      </beans:property>
    </beans:bean>

    <global-method-security pre-post-annotations="enabled">
        <!-- AspectJ pointcut expression that locates our "post" method and applies security that way
        <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
        -->
    </global-method-security>

    <http use-expressions="true">
        <!--<intercept-url pattern="/secure/extreme/**" access="hasRole('ROLE_SUPERVISOR')"/>-->
        <intercept-url pattern="/admin/**" access="isAuthenticated()" />
        <intercept-url pattern="/template" access="isAuthenticated()" />
        <!-- Disable web URI authorization, as we're using <global-method-security> and have @Secured the services layer instead
        <intercept-url pattern="/listAccounts.html" access="isRememberMe()" />
        <intercept-url pattern="/post.html" access="hasRole('ROLE_TELLER')" />
        -->
        <intercept-url pattern="/**" access="permitAll" />
        <form-login login-page='/login' default-target-url='/' always-use-default-target='true' />
        <logout logout-url="/logout" logout-success-url="/" invalidate-session="true"/>

        <remember-me user-service-ref="myUserDetailsService"/>

        <openid-login user-service-ref="myUserDetailsService" authentication-failure-url="/openidreg">
            <attribute-exchange>
                <openid-attribute name="email" type="http://schema.openid.net/contact/email" required="true" count="2"/>
                <openid-attribute name="name" type="http://schema.openid.net/namePerson/friendly" />
            </attribute-exchange>
        </openid-login>

  <!--
  <intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
  <intercept-url pattern="/**" access="ROLE_USER" />
  <form-login login-page='/login.jsp'/>

   Following completely omits resoutce from security (No user in req)
   <intercept-url pattern="/css/**" filters="none"/>
   <intercept-url pattern="/login.jsp*" filters="none"/>
   <intercept-url pattern="/**" access="ROLE_USER" />
   <form-login login-page='/login.jsp'/>

  -->
<!--
    Uncomment to enable X509 client authentication support
        <x509 />
-->
        <!-- Uncomment to limit the number of sessions a user can have -->
        <!--
        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management>
        -->
    </http>

    <beans:bean id="passwordEncoder"  class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" /> 

    <beans:bean id="passwordEncoderFacade" class="com.k_int.springsecurity.SSDigestService">
      <beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>

    <beans:bean id="IdentityService" class="com.k_int.svc.identity.service.impl.db.IdentityServiceDBImpl" init-method="init">
      <beans:property name="digestService" ref="passwordEncoderFacade"/>
      <beans:property name="sessionFactory" ref="SessionFactory"/>
    </beans:bean>

    <beans:bean id="myUserDetailsService" class="com.k_int.springsecurity.IdentityUserDetailsService" init-method="init">
      <beans:property name="identityService" ref="IdentityService"/>
    </beans:bean>

    <beans:bean id="OpenIDAuthProvider" class="com.k_int.springsecurity.OpenIDAuthenticationProvider">
      <beans:property name="userDetailsService" ref="myUserDetailsService"/>
    </beans:bean>


    <authentication-manager alias='authenticationManagerAlias'>

        <!-- Traditional user/pass accounts -->
        <authentication-provider user-service-ref='myUserDetailsService'>
            <password-encoder hash="sha">
              <salt-source user-property="username"/>
            </password-encoder> 
        </authentication-provider>

        <!-- OpenID accounts -->
        <authentication-provider ref="OpenIDAuthProvider"/>

    </authentication-manager>


    <beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>

</beans:beans>
